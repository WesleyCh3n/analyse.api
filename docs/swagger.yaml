basePath: /
definitions:
  models.ConcatFile:
    properties:
      ConcatFile:
        type: string
    type: object
  models.ExportFile:
    properties:
      ExportFile:
        example: exportfile.csv
        type: string
    type: object
  models.Fltr:
    properties:
      FltrFile:
        $ref: '#/definitions/models.FltrFile'
      Range:
        items:
          $ref: '#/definitions/models.Range'
        type: array
    type: object
  models.FltrFile:
    properties:
      cyDb:
        example: cyDb.csv
        type: string
      cyGt:
        example: cyGt.csv
        type: string
      cyLt:
        example: cyLt.csv
        type: string
      cyRt:
        example: cyRt.csv
        type: string
      rslt:
        example: rslt.csv
        type: string
    type: object
  models.Range:
    properties:
      End:
        type: number
      Start:
        type: number
    type: object
  models.ResConcat:
    properties:
      python:
        $ref: '#/definitions/models.ConcatFile'
      saveDir:
        example: file/example
        type: string
      serverRoot:
        example: http://example.com:3000
        type: string
    type: object
  models.ResExport:
    properties:
      python:
        $ref: '#/definitions/models.ExportFile'
      saveDir:
        example: file/example
        type: string
      serverRoot:
        example: http://example.com:3000
        type: string
    type: object
  models.ResUpload:
    properties:
      python:
        $ref: '#/definitions/models.Fltr'
      saveDir:
        example: file/example
        type: string
      serverRoot:
        example: http://example.com:3000
        type: string
      uploadFile:
        example: example_raw.csv
        type: string
    type: object
host: localhost:3001
info:
  contact:
    email: wesley.ch3n.0530@gmail.com
    name: Wesley
  description: analyze python backend
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: analyze API
  version: "1.0"
paths:
  /api/concat:
    put:
      consumes:
      - application/json
      description: return concat selection csvs
      operationId: concat_selection_file
      parameters:
      - description: files need to be concated
        in: body
        name: files
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResConcat'
      summary: concat 2 selection csv
      tags:
      - Python
  /api/export:
    put:
      consumes:
      - application/json
      description: return processed selection csv
      operationId: export_selection_file
      parameters:
      - description: filtered files
        in: body
        name: FltrFile
        required: true
        schema:
          $ref: '#/definitions/models.FltrFile'
      - description: selected ranges
        in: body
        name: RangeIndex
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Range'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResExport'
      summary: export selection files
      tags:
      - Python
  /api/save:
    patch:
      consumes:
      - application/json
      description: Save selected range in raw file
      operationId: save_selected_range
      parameters:
      - description: Original file
        in: body
        name: UploadFile
        required: true
        schema:
          type: string
      - description: range(string)  to  write  in  csv  column
        in: body
        name: Range
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            type: string
      summary: Save selected range in raw file
      tags:
      - Python
  /api/upload:
    post:
      consumes:
      - multipart/form-data
      description: upload raw csv and return filtered csvs
      operationId: upload_create_filtered_data
      parameters:
      - description: Upload file
        in: formData
        name: file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResUpload'
      summary: Create filtered files
      tags:
      - Python
swagger: "2.0"
tags:
- description: running python process api
  name: Python
