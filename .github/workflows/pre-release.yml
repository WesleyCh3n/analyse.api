---
name: "pre-release"

on:
  push:
    branches:
      - "main"

jobs:
  build:
    name: "Build"
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ''
            comp_er: tar
            comp_args: -cvf
            comp_type: tar
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ''
            comp_er: tar
            comp_args: -cvf
            comp_type: tar
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
            comp_er: 7z
            comp_args: 'a -tzip'
            comp_type: zip
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - id: get_repository_name
        run: echo ::set-output name=REPO_NAME::${{ github.event.repository.name }}
        shell: bash
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Build
        run: go build
      - name: Compress things up
        run: |
          ${{ matrix.comp_er }} ${{ matrix.comp_args }} ${{ steps.get_repository_name.outputs.REPO_NAME }}-${{ matrix.target }}.${{ matrix.comp_type }} analyze.api${{ matrix.suffix }}
          ls
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.get_repository_name.outputs.REPO_NAME }}-${{ matrix.target }}
          path: |
            ${{ steps.get_repository_name.outputs.REPO_NAME }}-${{ matrix.target }}.${{ matrix.comp_type }}
  pre-release:
    needs: build
    name: "Pre-release"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: get_repository_name
        run: echo ::set-output name=REPO_NAME::${{ github.event.repository.name }}
        shell: bash
      - uses: actions/download-artifact@master
        with:
          name: ${{ steps.get_repository_name.outputs.REPO_NAME }}-x86_64-apple-darwin.tar
      - uses: actions/download-artifact@master
        with:
          name: ${{ steps.get_repository_name.outputs.REPO_NAME }}-x86_64-unknown-linux-gnu.tar
      - uses: actions/download-artifact@master
        with:
          name: ${{ steps.get_repository_name.outputs.REPO_NAME }}-x86_64-pc-windows-msvc.zip
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            ${{ steps.get_repository_name.outputs.REPO_NAME }}-x86_64-apple-darwin.tar
            ${{ steps.get_repository_name.outputs.REPO_NAME }}-x86_64-unknown-linux-gnu.tar
            ${{ steps.get_repository_name.outputs.REPO_NAME }}-x86_64-pc-windows-msvc.zip
